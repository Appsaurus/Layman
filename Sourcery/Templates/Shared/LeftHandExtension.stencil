{% for AnchorType in argument.anchorTypes %}
//  sourcery:file:Sources/Shared/LeftHandLayoutExpression/{{AnchorType}}+LeftHandLayoutExpression
//
//  {{AnchorType}}+LeftHandLayoutExpression.swift
//  Layman
//
//  Created by Brian Strobach on 1/4/19.
//  Copyright Â© 2019 Brian Strobach. All rights reserved.
//

extension {{AnchorType}}: LeftHandLayoutExpression, CoefficientEquatable {
    public typealias LinearEquation = {{AnchorType}}Equation

    public func relation(_ relation: LayoutRelation, _ rhs: {{AnchorType}}) -> LinearEquation {
        return LinearEquation(self, relation, rhs)
    }

    public func relation(_ relation: LayoutRelation, _ rhs: RightHandExpression) -> LinearEquation {
        return LinearEquation(self, relation, rhs)
    }

    public func relation(_ relation: LayoutRelation, _ rhs: LayoutConstant) -> LinearEquation {
        return LinearEquation(self, relation, rhs)
    }

    public func relation(_ relation: LayoutRelation, _ rhs: LayoutMultiplier) -> LinearEquation {
        return LinearEquation(self, relation, .multiplier(rhs))
    }

    public func relation(_ relation: LayoutRelation, _ rhs: LayoutCoefficient) -> LinearEquation {
        return LinearEquation(self, relation, rhs)
    }

    public func relation(_ relation: LayoutRelation, _ rhs: RelativeLayoutConstant) -> LinearEquation {
        return LinearEquation(self, relation, rhs)
    }
}
// sourcery:end
{% endfor %}


