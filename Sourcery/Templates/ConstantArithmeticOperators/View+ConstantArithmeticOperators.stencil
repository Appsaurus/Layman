{% set equal argument.operators.equal %}
{% set lessThanOrEqual argument.operators.lessThanOrEqual %}
{% set greaterThanOrEqual argument.operators.greaterThanOrEqual %}
{% set addition argument.arithmeticOperators.addition %}
{% set subtraction argument.arithmeticOperators.subtraction %}
{% set multiplication argument.arithmeticOperators.multiplication %}
{% set division argument.arithmeticOperators.division %}

//  sourcery:file:Sources/Operators/ConstantArithmeticOperators/View+ConstantArithmeticOperators
//
//  ViewConstantArithmeticOperators.swift
//  Layman
//
//  Created by Brian Strobach on 1/4/19.
//  Copyright Â© 2019 Brian Strobach. All rights reserved.
//

@discardableResult
public func {{addition}} (lhs: View, rhs: LayoutConstant) -> LayoutDimensionPairExpression {
    return lhs.plus(rhs)
}

@discardableResult
public func {{subtraction}} (lhs: View, rhs: LayoutConstant) -> LayoutDimensionPairExpression {
    return lhs.minus(rhs)
}

@discardableResult
public func {{multiplication}} (lhs: View, rhs: LayoutConstant) -> LayoutDimensionPairExpression {
    return lhs.times(rhs)
}

@discardableResult
public func {{multiplication}} (lhs: LayoutConstant, rhs: View) -> LayoutDimensionPairExpression {
    return rhs.times(lhs)
}

@discardableResult
public func {{multiplication}} (lhs: View, rhs: LayoutMultiplier) -> LayoutDimensionPairExpression {
    return lhs.times(rhs)
}

@discardableResult
public func {{multiplication}} (lhs: LayoutMultiplier, rhs: View) -> LayoutDimensionPairExpression {
    return rhs.times(lhs)
}

@discardableResult
public func {{division}} (lhs: View, rhs: LayoutDivisor) -> LayoutDimensionPairExpression {
    return lhs.divided(by: rhs)
}

// MARK: LayoutPadding Constant
@discardableResult
public func {{addition}} (lhs: View, rhs: RelativeLayoutPadding) -> EdgeAnchorGroupExpression {
    return lhs.plus(rhs)
}

// sourcery:end
