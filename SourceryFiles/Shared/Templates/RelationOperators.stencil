{% for AnchorType in argument.AnchorTypes %}
{% set Solution %}{{AnchorType}}.Solution{% endset %}
// sourcery:file:RelationOperators/{{AnchorType}}+RelationOperators
//
//  {{AnchorType}}+RelationOperators.swift
//  UILayoutKit
//
//  Created by Brian Strobach on 1/4/19.
//  Copyright Â© 2019 Brian Strobach. All rights reserved.
//

// MARK: - Equal

// MARK: Anchor == Anchor
@discardableResult
public func {{argument.EqualityOperator}} (lhs: {{AnchorType}}, rhs: {{AnchorType}}) -> {{Solution}} {
    return lhs.equal(to: rhs)
}

// MARK: Anchor == Expression
@discardableResult
public func {{argument.EqualityOperator}} (lhs: {{AnchorType}}, rhs: {{AnchorType}}Expression) -> {{Solution}} {
    return lhs.equal(to: rhs)
}

// MARK: - LessThanOrEqual

// MARK: Anchor <= Anchor
@discardableResult
public func {{argument.LessThanOrEqualToOperator}} (lhs: {{AnchorType}}, rhs: {{AnchorType}}) -> {{Solution}} {
    return lhs.lessThanOrEqual(to: rhs)
}

// MARK: Anchor <= Expression
@discardableResult
public func {{argument.LessThanOrEqualToOperator}} (lhs: {{AnchorType}}, rhs: {{AnchorType}}Expression) -> {{Solution}} {
    return lhs.lessThanOrEqual(to: rhs)
}

// MARK: - GreaterThanOrEqual

// MARK: Anchor >= Anchor
@discardableResult
public func {{argument.GreaterThanOrEqualToOperator}} (lhs: {{AnchorType}}, rhs: {{AnchorType}}) -> {{Solution}} {
    return lhs.greaterThanOrEqual(to: rhs)
}

// MARK: Anchor >= Expression
@discardableResult
public func {{argument.GreaterThanOrEqualToOperator}} (lhs: {{AnchorType}}, rhs: {{AnchorType}}Expression) -> {{Solution}} {
    return lhs.greaterThanOrEqual(to: rhs)
}
// sourcery:end
{% endfor %}


